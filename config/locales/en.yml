en:
  explicit:
    errors:
      agreement: "must be accepted"
      array: "must be an array"
      array_item: "invalid item at index(%{index}): %{error}"
      big_decimal: "must be a string-encoded decimal number"
      boolean: "must be a boolean"
      date_range_format: 'must be a string in the format of "YYYY-MM-DD..YYYY-MM-DD"'
      date_range_inverted: "starting date must be the same day or a day before the ending date"
      date_range_min_date: "starting date must not be a day before %{min_date}"
      date_range_max_date: "ending date must not be a day after %{max_date}"
      date_range_min_range: "must not be less than %{min_range}"
      date_range_max_range: "must not be more than %{max_range}"
      date_time_iso8601_range_format: 'must be a string in the format of: "YYYY-MM-DDTHH:MM:SS..YYYY-MM-DDTHH:MM:SS"'
      date_time_iso8601_range_inverted: "starting datetime must be a moment before ending datetime"
      date_time_iso8601_range_min_date_time: "starting datetime must not be a moment before %{min_date_time}"
      date_time_iso8601_range_max_date_time: "ending datetime must not be a moment after %{max_date_time}"
      date_time_iso8601_range_min_range: "must not be less than %{min_range}"
      date_time_iso8601_range_max_range: "must not be more than %{max_range}"
      date_time_iso8601: "must be a valid datetime according to ISO8601"
      date_time_iso8601_min: "must not be a moment before %{min}"
      date_time_iso8601_max: "must not be a moment after %{max}"
      date_time_unix_epoch: "must be a valid posix timestamp"
      date_time_unix_epoch_min: "must not be a moment before %{min}"
      date_time_unix_epoch_max: "must not be a moment after %{max}"
      date_format: 'must be a date in the format "YYYY-MM-DD"'
      date_min: "must not be a date before %{min}"
      date_max: "must not be a date after %{max}"
      hash: "must be an object"
      hash_key: "invalid key (%{key}): %{error}"
      hash_value: "invalid value at key (%{key}): %{error}"
      enum: "must be one of: %{allowed_values}"
      file: "must be a file"
      file_max_size: "must be smaller than %{max_size}"
      file_content_type: "file content type must be one of: %{allowed_content_types}"
      float: "must be a number"
      integer: "must be an integer"
      min: "must be at least %{min}"
      max: "must be at most %{max}"
      not_negative: "must not be negative"
      not_positive: "must not be positive"
      literal: "must be %{value}"
      one_of_separator: "OR"
      string: "must be a string"
      empty: "must not be empty"
      min_length: "length must be at least %{min_length}"
      max_length: "length must be at most %{max_length}"
      format: "must have format %{regex}"
    swagger:
      agreement: "* Must be accepted (true)"
      big_decimal_min: "* Minimum: %{min}"
      big_decimal_max: "* Maximum: %{max}"
      date_range: '* The value must be a range between two dates in the format of: "YYYY-MM-DD..YYYY-MM-DD"'
      date_range_min_range: "* The range must not be less than %{min_range}"
      date_range_max_range: "* The range must not be more than %{max_range}"
      date_time_iso8601_range: '* The value must be a range between two date times in the format of: "YYYY-MM-DDTHH:MM:SS..YYYY-MM-DDTHH:MM:SS"'
      date_time_iso8601_range_min_range: "* The range must not be less than %{min_range}"
      date_time_iso8601_range_max_range: "* The range must not be more than %{max_range}"
      date_time_iso8601: "* Must be valid according to ISO 8601"
      date_time_unix_epoch: "* POSIX time or Unix epoch is the amount of seconds since 1970-01-01"
      file_max_size: "* Max size: %{max_size}"
      file_content_types: "* Content types: %{content_types}"
      hash_not_empty: "* Must have at least one value"
      number_not_positive: "* Must not be positive"
      number_only_positive: "* Must be positive"
      number_not_negative: "* Must not be negative"
      number_only_negative: "* Must be negative"
      string_not_empty: "* Must not be empty"
      string_downcase: "* Case insensitive"
